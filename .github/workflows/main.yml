on: ["pull_request"]
name: Static checks
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x, 1.15.x]
        os: [ubuntu-18.04]
    runs-on: ${{ matrix.os }}
    env:
      GO111MODULE: off
      TRAVIS: "true"
      TRAVIS_BRANCH: ${{ github.base_ref }}
      TRAVIS_PULL_REQUEST_BRANCH: ${{ github.head_ref }}
      TRAVIS_PULL_REQUEST_SHA : ${{ github.event.pull_request.head.sha }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Setup GOPATH
      run: |
        gopath_org=$(go env GOPATH)/src/github.com/kata-containers/
        mkdir -p ${gopath_org}
        ln -s ${PWD} ${gopath_org}
        echo "TRAVIS_BRANCH: ${TRAVIS_BRANCH}"
        echo "TRAVIS_PULL_REQUEST_BRANCH: ${TRAVIS_PULL_REQUEST_BRANCH}"
        echo "TRAVIS_PULL_REQUEST_SHA: ${TRAVIS_PULL_REQUEST_SHA}"
        echo "TRAVIS: ${TRAVIS}"
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup travis references
      run: |
        echo "TRAVIS_BRANCH=${TRAVIS_BRANCH:-$(echo $GITHUB_REF | awk 'BEGIN { FS = \"/\" } ; { print $3 }')}" 
    - name: Setup
      run: |
        ci_repo=$(go env GOPATH)/src/github.com/kata-containers/ci
        pushd ${ci_repo}
        GOPATH=$(go env GOPATH) .ci/setup.sh
    - name: Running tests
      run: |
        ci_repo=$(go env GOPATH)/src/github.com/kata-containers/ci
        pushd ${ci_repo}
        GOPATH=$(go env GOPATH) .ci/run.sh 
    - name: Running static checks
      run: |
        ci_repo=$(go env GOPATH)/src/github.com/kata-containers/ci
        pushd ${ci_repo}
        GOPATH=$(go env GOPATH) .ci/static-checks.sh
  # Check that all jobs can be generated.
  jobs-builder-check:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install the Jenkins Job Builder
        run: |
          pip install --user jenkins-job-builder
      - name: Check it can generate all jobs
        run: |
          cd jobs-builder
          cp jjb.conf.template jjb.conf
          ./publish_jobs.sh -c jjb.conf -t
