#cloud-config
# Copyright (c) 2018 Intel Corporation
# 
# SPDX-License-Identifier: Apache-2.0

users:
  - name: USERNAME
    gecos: Jenkins User
    lock-passwd: false
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - PUBLICKEYCONTENTS

packages:
 - bc
 - build-essential
 - curl
 - default-jre
 - gawk
 - gcc
 - git
 - jq
 - linux-tools-common
 - make

runcmd:
# Looks like the write_file to the USERNAME user homedir, even though the file
# is owned by USERNAME (or not, as we could not make that work...), makes all
# the dirs owned by root - so, let's put them back
 - chown -R USERNAME /home/USERNAME
 - chgrp -R USERNAME /home/USERNAME

# Install Go - we use it to bootstrap the metrics environment from the Jenkins scripts.
# The sourceing of environment is a workaround to get any proxy settings we need
 - 'bash -c "set -a; source /etc/environment; set +a; curl -L https://dl.google.com/go/go1.10.2.linux-ARCH.tar.gz -o /tmp/go1.10.2.linux-ARCH.tar.gz"'
 - tar -C /usr/local -xzf /tmp/go1.10.2.linux-ARCH.tar.gz
 - rm /tmp/go1.10.2.linux-ARCH.tar.gz

# Install docker
# The sourceing of environment is a workaround to get any proxy settings we need
 - 'bash -c "set -a; source /etc/environment; set +a; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"'
 - sudo add-apt-repository "deb [arch=ARCH] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 - apt-get update
 - apt-get install -y docker-ce
 - apt-get install -y linux-tools-`uname -r`
 - gpasswd -a USERNAME docker

# Remove the unattended upgrade feature, for two reasons:
# - It takes the apt-lock, and can thus make our CI script apt usage fail (and thus
#   fail the whole run.
# - It may run in the background and purturb any metrics measurements we are trying to
#   take - that is, it injects noise into our test system.
 - apt remove -y unattended-upgrades

# Also disable the apt daily service so it does not invoke any polls that may take
# the apt-lock
 - systemctl mask apt-daily.service
 - systemctl mask apt-daily.timer
 - systemctl mask apt-daily-upgrade.service
 - systemctl mask apt-daily-upgrade.timer

# Cleanup
 - apt-get auto-remove -y

write_files:
# We need to set up the users git identity, otherwise git complains and
# errors out on some merge/forward operations for PR builds.
-   content: |
        [user]
            name = USERNAME User
            # Safe using a fake email here - we never post to it or expose it outside
            # of the VM.
            email = USERNAME@HOSTNAME
    path: /home/USERNAME/.gitconfig
    permissions: '0644'

# We leave the VM running, for the user to detach and then run the
# host side completion script, which will then shut the VM down when
# finally configured
