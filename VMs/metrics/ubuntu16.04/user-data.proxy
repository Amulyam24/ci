#cloud-config
# Copyright (c) 2018 Intel Corporation
# 
# SPDX-License-Identifier: Apache-2.0

users:
  - name: USERNAME
    gecos: Jenkins User
    primary_group: USERNAME
    lock-passwd: false
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
      - PUBLICKEYCONTENTS

packages:
 - bc
 - build-essential
 - curl
 - default-jre
 - gawk
 - gcc
 - git
 - jq
 - make
## PROXY specific mods
# We need socat for our git proxy script
 - socat

runcmd:
## PROXY specific mods
# Looks like the write_file to the USERNAME user homedir, even though the file
# is owned by USERNAME, makes all the dirs owned by root - so, let's put them
# back
 - chown -R USERNAME /home/USERNAME
 - chgrp -R USERNAME /home/USERNAME

# Install Go - we use it to bootstrap the metrics environment from the Jenkins scripts.
# The sourceing of environment is a workaround to get any proxy settings we need
 - 'bash -c "set -a; source /etc/environment; set +a; curl -L https://dl.google.com/go/go1.10.2.linux-ARCH.tar.gz -o /tmp/go1.10.2.linux-ARCH.tar.gz"'
 - tar -C /usr/local -xzf /tmp/go1.10.2.linux-ARCH.tar.gz
 - rm /tmp/go1.10.2.linux-ARCH.tar.gz

# Install docker
# The sourceing of environment is a workaround to get any proxy settings we need
 - 'bash -c "set -a; source /etc/environment; set +a; curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"'
 - sudo add-apt-repository "deb [arch=ARCH] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 - apt-get update
 - apt-get install -y docker-ce
 - gpasswd -a USERNAME docker

# Cleanup
 - apt-get auto-remove -y

# We leave the VM running, for the user to detach and then run the
# host side completion script, which will then shut the VM down when
# finally configured

## PROXY specific mods
apt:
    http_proxy: http://PROXY_IP:PROXY_PORT
    https_proxy: https://PROXY_IP:PROXY_PORT
    ftp_proxy: http://PROXY_IP:PROXY_PORT

write_files:
-   content: |
        http_proxy="http://PROXY_IP:PROXY_PORT"
        https_proxy="https://PROXY_IP:PROXY_PORT"
        ftp_proxy="http://PROXY_IP:PROXY_PORT"
        no_proxy="localhost,127.0.0.1"
    path: /etc/environment
    permissions: '0644'
-   content: |
        #!/bin/bash
        PROXY=PROXY_IP
        exec socat STDIO SOCKS4:$PROXY:$1:$2
    path: /home/USERNAME/bin/gitproxy
# We need to set up the users git identity, otherwise git complains and
# errors out on some merge/forward operations for PR builds.
# Just can't get these ownerships to work with cloud-init
# we'll fix them in the runcmd section.
#    owner: USERNAME:USERNAME
    permissions: '0744'
-   content: |
        [user]
            name = USERNAME User
# Safe using a fake email here - we never post to it or expose it outside
# of the VM.
            email = USERNAME@HOSTNAME
        [core]
            gitproxy = /home/USERNAME/bin/gitproxy
        [http]
            proxy = http://PROXY_IP:PROXY_PORT
        [https]
            proxy = https://PROXY_IP:PROXY_PORT
    path: /home/USERNAME/.gitconfig
# Just can't get these ownerships to work with cloud-init
# we'll fix them in the runcmd section.
#    owner: USERNAME:USERNAME
    permissions: '0644'
-   content: |
        [Service]
        Environment="HTTP_PROXY=http://PROXY_IP:PROXY_PORT"
        Environment="HTTPS_PROXY=https://PROXY_IP:PROXY_PORT"
        Environment="FTP_PROXY=http://PROXY_IP:PROXY_PORT"
        Environment="NO_PROXY=localhost,127.0.0.1"
    path: /etc/systemd/system/docker.service.d/http-proxy.conf
    permissions: '0644'


