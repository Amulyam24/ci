<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.5.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.5.1">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Job for running the e2e conformance tests from sonobuoy using Kata Containers and cri-o.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.12"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.5">
      <projectUrl>https://github.com/kata-containers/runtime/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>TZ=America/Mexico_City
H 0 * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.79">
    <script>pipeline{
    agent { label &quot;ubuntu1804_azure&quot; }
    options {
        timeout(time: 5, unit: &apos;HOURS&apos;)
    }

    environment {
        CI                = &quot;true&quot;
        GOPATH            = &quot;${WORKSPACE}/go&quot;
        PATH              = &quot;${GOPATH}/bin:/usr/local/go/bin:/usr/sbin:${PATH}&quot;
        GOROOT            = &quot;/usr/local/go&quot;
        RUNTIME_PATH      = &quot;/usr/bin/kata-runtime&quot;
        RUNTIME           = &quot;kata-runtime&quot;
        GIT_BRANCH        = &quot;master&quot;
    }

    stages {
        stage(&apos;Setup Environment&apos;) {
            steps {
                sh &apos;&apos;&apos;
                env
                tests_repo=&quot;github.com/kata-containers/tests&quot;
                tests_repo_dir=&quot;${GOPATH}/src/${tests_repo}&quot;
                mkdir -p &quot;${tests_repo_dir}&quot;
                git clone &quot;https://${tests_repo}.git&quot; &quot;${tests_repo_dir}&quot;
                cd &quot;${tests_repo_dir}&quot;
                .ci/setup.sh
                &apos;&apos;&apos;
            }
        }

        stage(&apos;Initialize Kubernetes&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cd &quot;${WORKSPACE}/go/src/github.com/kata-containers/tests/integration/kubernetes&quot;
                ./init.sh || (sleep 10 &amp;&amp; ./init.sh)
                crio --version
                crictl --version
                kubectl get runtimeclass
                sleep 30
                kubectl apply -f runtimeclass_workloads/kata-runtimeclass.yaml
                kubectl describe runtimeclass kata
                kubectl get pods --all-namespaces
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Run e2e conformance&apos;) {
            steps {
                sh &apos;&apos;&apos;
                cd &quot;${WORKSPACE}/go/src/github.com/kata-containers/tests/integration/kubernetes/e2e_conformance&quot;
                sed -i &apos;/pipefail/aset -x&apos; run.sh
                cat skipped_tests_e2e.yaml
                ./run.sh
                &apos;&apos;&apos;
            }
        }
    }

    post {
        always {
            script {
                try {
                    sh &apos;&apos;&apos;
                    sonobuoy status || true
                    sonobuoy logs || true
                    cd &quot;${WORKSPACE}/go/src/github.com/kata-containers/tests&quot;
                    ls &quot;/tmp&quot;
                    .ci/teardown.sh &quot;$WORKSPACE/artifacts&quot; || ls &quot;${WORKSPACE}/artifacts&quot;
                    &apos;&apos;&apos;
                }
                catch (err) {
                    echo &quot;teardown produced some errors&quot;
                }
            }
            archiveArtifacts artifacts: &apos;artifacts/*&apos;, fingerprint: true, allowEmptyArchive: true
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
