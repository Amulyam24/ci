<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>30</numToKeep>
        <artifactDaysToKeep>30</artifactDaysToKeep>
        <artifactNumToKeep>30</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.29.2">
      <projectUrl>https://github.com/kata-containers/runtime/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/kata-containers/runtime.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>refs/heads/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <assignedNode>ubuntu-1604</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.29.2">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -e

export ghprbPullId
export ghprbTargetBranch

export METRICS_CI=true

cd $HOME
git clone https://github.com/kata-containers/tests.git
cd tests

# Install smem
sudo apt update
sudo apt -y install smem

.ci/jenkins_job_build.sh &quot;github.com/kata-containers/runtime&quot;

cd metrics/density 
sudo -E PATH=$PATH bash docker_memory_usage.sh 1 10 
sudo -E PATH=$PATH bash memory_usage_inside_container.sh

cd ../results
memory_usage_file=&quot;memory-footprint.json&quot;
memory_inside_file=&quot;memory-footprint-inside-container.json&quot;

cat &quot;$memory_usage_file&quot;
cat &quot;$memory_inside_file&quot;
units=$(cat &quot;$memory_usage_file&quot; | jq &apos;.Results[0].qemus.Units&apos;)
units=&quot;${units%\&quot;}&quot; 
units=&quot;${units#\&quot;}&quot; 

qemu_memory_footprint=&quot;$(cat &quot;$memory_usage_file&quot; | jq &apos;.Results[0].qemus.Result&apos;) $units&quot;
proxy_memory_footprint=&quot;$(cat &quot;$memory_usage_file&quot; | jq &apos;.Results[0].proxys.Result&apos;) $units&quot;
shim_memory_footprint=&quot;$(cat &quot;$memory_usage_file&quot; | jq &apos;.Results[0].shims.Result&apos;) $units&quot;

inside_memtotal=&quot;$(cat &quot;$memory_inside_file&quot; | jq &apos;.Results[0].memtotal.Result&apos;) $units&quot;
inside_memfree=&quot;$(cat &quot;$memory_inside_file&quot; | jq &apos;.Results[0].memfree.Result&apos;) $units&quot;

echo &quot;=================================&quot;
echo &quot;PSS Measurement:&quot;
echo &quot;Qemu: $qemu_memory_footprint&quot;
echo &quot;Proxy: $proxy_memory_footprint&quot;
echo &quot;Shim: $shim_memory_footprint&quot;
echo &quot;&quot;
echo &quot;Memory inside container:&quot;
echo &quot;Total Memory: $inside_memtotal&quot;
echo &quot;Free Memory:  $inside_memfree&quot;
echo &quot;=================================&quot;
echo &quot;&quot;

mem_result_file=$(mktemp)
echo &quot;{ \&quot;body\&quot;: \&quot;PSS Measurement:\nQemu: ${qemu_memory_footprint}\nProxy: ${proxy_memory_footprint}\nShim: ${shim_memory_footprint}\n\nMemory inside container:\nTotal Memory: ${inside_memtotal}\nFree Memory:  ${inside_memfree}\&quot; } &quot; &gt; &quot;$mem_result_file&quot;
cat &quot;$mem_result_file&quot;

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>.*</logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>#!/bin/bash&#xd;
&#xd;
export GOPATH=$WORKSPACE/go&#xd;
export GOROOT=&quot;/usr/local/go&quot;&#xd;
export PATH=${GOPATH}/bin:/usr/local/go/bin:/usr/sbin:/usr/local/bin:${PATH}&#xd;
&#xd;
cd $GOPATH/src/github.com/kata-containers/tests&#xd;
.ci/teardown.sh &quot;$WORKSPACE&quot;</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>kata-proxy_*,kata-runtime_*,kata-shim_*,crio_*,docker_*,kubelet_*,kata-collect-data_*</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.NoActivityTimeOutStrategy">
        <timeoutSecondsString>300</timeoutSecondsString>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.10"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.5.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <jenkins.plugins.openstack.compute.JCloudsOneOffSlave plugin="openstack-cloud@2.36"/>
  </buildWrappers>
</project>